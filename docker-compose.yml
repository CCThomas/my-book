# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  backend:
    # Configuration for building the docker image for the backend service
    build:
      context: backend # Use an image built from the specified dockerfile in the `backend` directory.
      dockerfile: Dockerfile
    ports:
      - "8081:8081" # Forward the exposed port 8081 on the container to port 8081 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/mybook?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: author
      SPRING_DATASOURCE_PASSWORD: password
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend-network
      - frontend-network

  # Frontend Service
  frontend:
    # container_name: sample
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - '.:/app'
      - '/app/node_modules'
    restart: always
    depends_on:
      - backend
    ports:
      - 3000:3000
    stdin_open: true
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - frontend-network

  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: mybook
      MYSQL_USER: author
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend-network

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend-network:
  frontend-network: